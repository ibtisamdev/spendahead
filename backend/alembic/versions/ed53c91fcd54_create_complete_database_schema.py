"""Create complete database schema

Revision ID: ed53c91fcd54
Revises: 9be49313cc25
Create Date: 2025-07-18 16:09:26.128887

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed53c91fcd54'
down_revision: Union[str, None] = '9be49313cc25'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('account_subtype', sa.String(length=50), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('available_balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('account_number', sa.String(length=50), nullable=True),
    sa.Column('routing_number', sa.String(length=20), nullable=True),
    sa.Column('institution_name', sa.String(length=100), nullable=True),
    sa.Column('institution_id', sa.String(length=50), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('external_account_id', sa.String(length=255), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_status', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('exclude_from_budget', sa.Boolean(), nullable=False),
    sa.Column('exclude_from_net_worth', sa.Boolean(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('account_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_accounts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_accounts'))
    )
    op.create_index(op.f('ix_accounts_external_id'), 'accounts', ['external_id'], unique=False)
    op.create_index(op.f('ix_accounts_user_id'), 'accounts', ['user_id'], unique=False)
    op.create_table('ai_insights',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('insight_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('ai_model_used', sa.String(length=50), nullable=True),
    sa.Column('ai_confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('ai_processing_time', sa.Integer(), nullable=True),
    sa.Column('ai_tokens_used', sa.Integer(), nullable=True),
    sa.Column('data_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('affected_categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('affected_accounts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('potential_savings', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('impact_score', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_actioned', sa.Boolean(), nullable=False),
    sa.Column('action_taken', sa.String(length=100), nullable=True),
    sa.Column('user_feedback', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ai_insights_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_insights'))
    )
    op.create_index(op.f('ix_ai_insights_user_id'), 'ai_insights', ['user_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('changed_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('audit_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('budgets',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_budget', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('rollover_enabled', sa.Boolean(), nullable=False),
    sa.Column('alert_threshold', sa.Integer(), nullable=False),
    sa.Column('alert_enabled', sa.Boolean(), nullable=False),
    sa.Column('ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_suggestions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('actual_spent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('variance_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('variance_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_budgets_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_budgets'))
    )
    op.create_index(op.f('ix_budgets_user_id'), 'budgets', ['user_id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('category_type', sa.String(length=20), nullable=False),
    sa.Column('budget_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_period', sa.String(length=20), nullable=False),
    sa.Column('transaction_count', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('ai_confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_categories_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_index(op.f('ix_categories_user_id'), 'categories', ['user_id'], unique=False)
    op.create_table('budget_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('budget_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('planned_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('actual_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_fixed', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('variance_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('variance_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('ai_suggested_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ai_confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], name=op.f('fk_budget_items_budget_id_budgets'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_budget_items_category_id_categories'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_budget_items'))
    )
    op.create_index(op.f('ix_budget_items_budget_id'), 'budget_items', ['budget_id'], unique=False)
    op.create_index(op.f('ix_budget_items_category_id'), 'budget_items', ['category_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('from_account_id', sa.UUID(), nullable=True),
    sa.Column('to_account_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurring_pattern', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_transaction_id', sa.UUID(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('import_source', sa.String(length=50), nullable=True),
    sa.Column('import_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_categorized', sa.Boolean(), nullable=False),
    sa.Column('ai_confidence_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('ai_suggested_category_id', sa.UUID(), nullable=True),
    sa.Column('ai_categorization_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_cleared', sa.Boolean(), nullable=False),
    sa.Column('is_reconciled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['ai_suggested_category_id'], ['categories.id'], name=op.f('fk_transactions_ai_suggested_category_id_categories'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_transactions_category_id_categories'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['from_account_id'], ['accounts.id'], name=op.f('fk_transactions_from_account_id_accounts'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parent_transaction_id'], ['transactions.id'], name=op.f('fk_transactions_parent_transaction_id_transactions'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], name=op.f('fk_transactions_to_account_id_accounts'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_transactions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions'))
    )
    op.create_index(op.f('ix_transactions_category_id'), 'transactions', ['category_id'], unique=False)
    op.create_index(op.f('ix_transactions_external_id'), 'transactions', ['external_id'], unique=False)
    op.create_index(op.f('ix_transactions_from_account_id'), 'transactions', ['from_account_id'], unique=False)
    op.create_index(op.f('ix_transactions_to_account_id'), 'transactions', ['to_account_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_to_account_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_from_account_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_external_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_category_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_budget_items_category_id'), table_name='budget_items')
    op.drop_index(op.f('ix_budget_items_budget_id'), table_name='budget_items')
    op.drop_table('budget_items')
    op.drop_index(op.f('ix_categories_user_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_budgets_user_id'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_ai_insights_user_id'), table_name='ai_insights')
    op.drop_table('ai_insights')
    op.drop_index(op.f('ix_accounts_user_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_external_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
